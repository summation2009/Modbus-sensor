// ***********************************************************************
//     -------------------------------------------------------------------
//                        ‡πÅ‡∏Å‡πâ‡∏Ç‡∏≤‡∏ó‡∏µ‡πà esp32s3-default-pins.hpp
//                        ‡πÅ‡∏Å‡πâ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏ó‡∏µ‡πà ESP32-VirtualMatrixPanel-I2S-DMA.h
//     -------------------------------------------------------------------
// ***********************************************************************
#include <ESP32-VirtualMatrixPanel-I2S-DMA.h>
#include <Adafruit_NeoPixel.h>
#include <Adafruit_GFX.h>
#include <SPI.h>
#include "Wire.h"

#include <Fonts/FreeSansBold12pt7b.h>

#define PIN_RGB 48
#define NUMPIXELS 1

Adafruit_NeoPixel pixels(NUMPIXELS, PIN_RGB, NEO_RGB + NEO_KHZ800);
#define DELAYVAL 500

#define PANEL_RES_X 64 // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏°‡∏î‡∏π‡∏•‡πÅ‡∏ú‡∏á
#define PANEL_RES_Y 64 // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏°‡∏î‡∏π‡∏•‡πÅ‡∏ú‡∏á

#define NUM_ROWS 1                     // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ñ‡∏ß‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô
#define NUM_COLS 1                     // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏ú‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß
#define PANEL_CHAIN NUM_ROWS *NUM_COLS // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ô
#define VIRTUAL_MATRIX_CHAIN_TYPE CHAIN_NONE

MatrixPanel_I2S_DMA *dma_display = nullptr;
VirtualMatrixPanel *matrix = nullptr; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô virtualDisp ‡πÄ‡∏õ‡πá‡∏ô matrix

uint16_t myBLACK = matrix->color565(0, 0, 0);
uint16_t myWHITE = matrix->color565(255, 255, 255);
uint16_t myRED = matrix->color565(255, 0, 0);
uint16_t myGREEN = matrix->color565(0, 255, 0);
uint16_t myBLUE = matrix->color565(0, 0, 255);
uint16_t myYELLOW = matrix->color565(255, 255, 0);
uint16_t myPINK = matrix->color565(255, 20, 147);
uint16_t mySKYBLUE = matrix->color565(0, 255, 255);
uint16_t myPurple = matrix->color565(127, 0, 255);
uint16_t myMAGENTA = matrix->color565(210, 2, 210);

void setup()
{
  delay(1000);
   Serial.begin(115200);
  while (!Serial) {
    delay(10); // ‡∏£‡∏≠ USB CDC ‡∏û‡∏£‡πâ‡∏≠‡∏°
  }
  delay(100); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£
  Serial.println("üöÄ ESP32-S3 Started!");


  HUB75_I2S_CFG mxconfig(
      PANEL_RES_X, // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏π‡∏•
      PANEL_RES_Y, // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡πÇ‡∏°‡∏î‡∏π‡∏•
      PANEL_CHAIN  // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏ä‡∏ô
  );

  dma_display = new MatrixPanel_I2S_DMA(mxconfig);

  dma_display->setBrightness8(128); // ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 0-255, 0 - 0%, 255 - 100%

  if (not dma_display->begin())
    Serial.println("****** !KABOOM! I2S memory allocation failed ***********");

  // matrix = new VirtualMatrixPanel((*dma_display), NUM_ROWS, NUM_COLS, PANEL_RES_X, PANEL_RES_Y, CHAIN_NONE);
  matrix = new VirtualMatrixPanel((*dma_display), NUM_ROWS, NUM_COLS, PANEL_RES_X / NUM_COLS, PANEL_RES_Y, VIRTUAL_MATRIX_CHAIN_TYPE);
  
  matrix->fillScreen(myRED);
  Serial.println("RED");
  pixels.setPixelColor(0, pixels.Color(0, 255, 0)); // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
  pixels.show();
  delay(1000);
  
  matrix->fillScreen(myGREEN);
  Serial.println("GREEN");
  pixels.setPixelColor(0, pixels.Color(255, 0, 0)); // ‡πÅ‡∏î‡∏á
  pixels.show();
  delay(1000);

  matrix->fillScreen(myBLUE);
  Serial.println("BLUE");
  pixels.setPixelColor(0, pixels.Color(0, 0, 255)); // ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
  pixels.show();
  delay(1000);

  matrix->fillScreen(myYELLOW);
  Serial.println("YELLO");
  pixels.setPixelColor(0, pixels.Color(0, 0, 0)); // ‡∏ô‡πâ‡∏≥‡πÄ‡∏á‡∏¥‡∏ô
  pixels.show();
  delay(1000);

    matrix->fillScreen(myBLACK);
}

void loop()
{

  //64x64
  matrix->fillScreen(myRED);
  matrix->color565(0, 0, 0);
  matrix->setFont(&FreeSansBold12pt7b);
  matrix->setTextSize(1);
  matrix->setCursor(6, 43);
  matrix->print("RED");
  delay(1000);

  matrix->fillScreen(myGREEN);
  matrix->color565(0, 0, 0);
  matrix->setFont(&FreeSansBold12pt7b);
  matrix->setTextSize(1);
  matrix->setCursor(6, 43);
  matrix->print("GREEN");
  delay(1000);

  matrix->fillScreen(myBLUE);
  matrix->color565(0, 0, 0);
  matrix->setFont(&FreeSansBold12pt7b);
  matrix->setTextSize(1);
  matrix->setCursor(6, 43);
  matrix->print("BLUE");
  delay(1000);

  matrix->fillScreen(myYELLOW);
  matrix->color565(0, 0, 0);
  matrix->setFont(&FreeSansBold12pt7b);
  matrix->setTextSize(1);
  matrix->setCursor(6, 43);
  matrix->print("YELLOW");
  delay(1000);

}